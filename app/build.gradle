plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
//    id 'kotlin-parcelize'
//    id 'androidx.navigation.safeargs'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.yongliang.houylbase"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
//    jackOptions {
//        enabled true
//    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        debug {
//            release {
//                minifyEnabled false
//                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            }
//        }
    }
    sourceSets{

//      思考： 这种方式与 引用module 的方式，哪种更好？
//      这两种方式粒度不一样，这是对 mudule 的补充，作目录分离；
//      module 可能是 对这种模式的再处理；该模式可以共用一个 buildgradle, module 形式可能会有多种库，有冲突；
//      module 可以互相引用，采用下面这种方式不可以； 这可以看做是对 目录的分离；将目录与目录之间分开； 粒度比module 小，可以作为对module 的补充。
        main{
//       这样可以将不同功能的代码隔离，方便删除
            res.srcDirs = ['zfunctionOne/res','src/main/res1','src/main/res','src/common_bitmap/res'
                           ,'src/common_cipher/res','src/common_download/res','src/common_network/res'
                           ,'src/common_optimize/res','src/common_phone_adpter/res','src/common_webview/res'
                           ,'src/common_weight/res']
            java.srcDirs=['src/main/java','src/main/java_firstpage','zfunctionOne/main/java','src/main/common_bitmap'
            ,'src/main/common_cipher','src/main/common_download','src/main/common_network','src/main/common_optimize'
            ,'src/main/common_phone_adpter','src/main/common_webview','src/main/common_weight']
        }

    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//    flavorDimensions("typeFunction")
//
//    productFlavors {
//
//        firstPage {
//            dimension "typeFunction"
//        }
//        vip {
//            dimension "typeFunction"
//        }


//
//        baidu {
////            manifestPlaceholders = [CHANNEL: "baidu"]
//            dimension "channel"
//        }
//
//        xiaomi {
////            manifestPlaceholders = [CHANNEL: "xiaomi"]
//            dimension "channel"
//        }
//
//        dependenciesInfo {
//            includeInApk false
//            includeInBundle false
//        }
//        ndkVersion '20.0.5594570'
//    }
}
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation 'androidx.appcompat:appcompat:1.2.0'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//        navigation
        implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
        implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
        implementation 'androidx.annotation:annotation:1.1.0'
        implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
        implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
//        图片框架
        implementation 'com.github.bumptech.glide:glide:4.8.0'
        annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

        implementation 'com.google.code.gson:gson:2.8.6'
//        SafeArgs
//        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"

        //吐司兼容7.0 版本 两种方案
        implementation 'com.github.Dovar66:DToast:1.1.6'
        implementation 'com.hjq:toast:8.8'

        implementation 'com.google.android.material:material:1.3.0-alpha04'
        testImplementation 'junit:junit:4.+'
        androidTestImplementation 'androidx.test.ext:junit:1.1.2'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
        implementation 'androidx.core:core-ktx:1.3.2'
        implementation 'commons-codec:commons-codec:20041127.091804'
    }
