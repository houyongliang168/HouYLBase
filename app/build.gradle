

apply from: "../module.app.build.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'dagger.hilt.android.plugin'
android {
    sourceSets {

//      思考： 这种方式与 引用module 的方式，哪种更好？
//      这两种方式粒度不一样，这是对 mudule 的补充，作目录分离；
//      module 可能是 对这种模式的再处理；该模式可以共用一个 buildgradle, module 形式可能会有多种库，有冲突；
//      module 可以互相引用，采用下面这种方式不可以； 这可以看做是对 目录的分离；将目录与目录之间分开； 粒度比module 小，可以作为对module 的补充。
        main {
//       这样可以将不同功能的代码隔离，方便删除
            res.srcDirs = ['src/main/res1', 'src/main/res', 'src/common_cipher/res']
            java.srcDirs = ['src/main/java', 'src/main/java_firstpage', 'src/main/common_cipher']
        }

    }
//    defaultConfig {
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += ["room.schemaLocation":
//                                     "$projectDir/schemas".toString()]
//            }
//        }
//    }


//    flavorDimensions("typeFunction")
//
//    productFlavors {
//
//        firstPage {
//            dimension "typeFunction"
//        }
//        vip {
//            dimension "typeFunction"
//        }


//
//        baidu {
////            manifestPlaceholders = [CHANNEL: "baidu"]
//            dimension "channel"
//        }
//
//        xiaomi {
////            manifestPlaceholders = [CHANNEL: "xiaomi"]
//            dimension "channel"
//        }
//
//        dependenciesInfo {
//            includeInApk false
//            includeInBundle false
//        }
//        ndkVersion '20.0.5594570'
//    }
}


dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//        navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
//  图片框架
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

//    implementation ("com.github.bumptech.glide:glide:4.11.0") {
//        exclude group: "com.android.support"
//    }
//    kapt 'com.github.bumptech.glide:compiler:4.11.0'



//        网络解析框架
    implementation 'com.google.code.gson:gson:2.8.6'
//        SafeArgs
//        implementation "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"

    //吐司兼容7.0 版本 两种方案
    implementation 'com.github.Dovar66:DToast:1.1.6'
//    implementation 'com.hjq:toast:8.8'
    api project(':lib_core')

    implementation 'com.google.android.material:material:1.3.0-alpha04'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'commons-codec:commons-codec:20041127.091804'

    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

//    aspectj 依赖
//    implementation 'org.aspectj:aspectjrt:1.8.13'
}
//import org.aspectj.bridge.IMessage
//import org.aspectj.bridge.MessageHandler
//import org.aspectj.tools.ajc.Main
//
//final def log = project.logger
//final def variants = project.android.applicationVariants
//
//variants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return;
//    }
//    JavaCompile javaCompile = variant.javaCompile
//    javaCompile.doLast {
//        String[] args = ["-showWeaveInfo",
//                         "-1.8",
//                         "-inpath", javaCompile.destinationDir.toString(),
//                         "-aspectpath", javaCompile.classpath.asPath,
//                         "-d", javaCompile.destinationDir.toString(),
//                         "-classpath", javaCompile.classpath.asPath,
//                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
//        log.debug "ajc args: " + Arrays.toString(args)
//        MessageHandler handler = new MessageHandler(true);
//        new Main().run(args, handler);
//        for (IMessage message : handler.getMessages(null, true)) {
//            switch (message.getKind()) {
//                case IMessage.ABORT:
//                case IMessage.ERROR:
//                case IMessage.FAIL:
//                    log.error message.message, message.thrown
//                    break;
//                case IMessage.WARNING:
//                    log.warn message.message, message.thrown
//                    break;
//                case IMessage.INFO:
//                    log.info message.message, message.thrown
//                    break;
//                case IMessage.DEBUG:
//                    log.debug message.message, message.thrown
//                    break;
//            }
//        }
//    }
//}