// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
apply from: "default.gradle"
apply from: "deps.gradle"
apply from: "version.gradle"

// Top-level build file where you can add configuration options common to all sub-projects/modules.
// Gradle中可以使用“//”或“/**/”来添加注释，与Java类似。
// 根目录下的build.gradle用于添加子工程或模块共用的配置项。

// "buildscript"的类型为script block，而且是最上层的script block，用于配置Gradle的Project实例。其API文档为https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:buildscript(groovy.lang.Closure)
// 其余的根script block有"allprojects", "dependencies", "configurations"等，更多的可见https://docs.gradle.org/current/dsl/的“Build script structure”一节。
// Script Block是一种method的调用，传入的参数为configuration closure。执行后会对Project的属性进行配置。
// 此处的"buildscript"用于配置Project的build script的classpath。

buildscript {
    ext.kotlin_version = '1.4.21'
    ext.navigationVersion = "2.0.0"

    repositories {
//      这个给 下面插件下载使用的 优先google 相关网址
        mavenLocal()
        google()
        mavenCentral()
        jcenter()
        maven {
            url 'https://maven.aliyun.com/repository/google' }  // <= here
        maven { url "https://maven.google.com" }
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/repositories/google' }

        maven { url 'https://maven.aliyun.com/repository/jcenter' }  // <= here
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/groups/public/' }
         maven { url "https://jitpack.io" }
        // 如果需要的话，从https://jcenter.bintray.com/下载code reposities。



    }

    // grade的android-library插件的版本
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28-alpha'
//        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.9'
//        classpath 'org.aspectj:aspectjtools:1.8.9'
//        classpath 'org.aspectj:aspectjweaver:1.8.9'
//        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.9'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
// 该配置会被应用到所有的子工程。
allprojects {
    repositories {
        flatDir{
            dirs 'libs'
        }
        mavenLocal()
        mavenCentral()
        google()
        maven {
            allowInsecureProtocol = true
            url 'http://mvn.cloud.alipay.com/nexus/content/repositories/releases/'
            name 'alipay'
            credentials {
                username 'mvn_read_ws'
                password 'mrk8929'
            }
        }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }  // <= here
        maven { url 'https://maven.aliyun.com/repository/google' }  // <= here

        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url "https://maven.google.com" }
        maven { url "https://dl.google.com/dl/android/maven2/" }
        // 如果需要的话，从https://jcenter.bintray.com/下载code reposities。
        jcenter()


    }
}

// 运行gradle clean时，执行此处定义的task。
// 该任务继承自Delete，删除根目录中的build目录。
// 相当于执行Delete.delete(rootProject.buildDir)。
// gradle使用groovy语言，调用method时可以不用加（）。

task clean(type: Delete) {
    delete rootProject.buildDir
}