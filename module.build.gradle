//if (isBuildModule.toBoolean()) {
//    //作为独立App应用运行
//    apply plugin: 'com.android.application'
//} else {
//    //作为组件运行
//    apply plugin: 'com.android.library'
//}
//def cfg = rootProject.ext.androidConfig
//def appId = rootProject.ext.appId
//def ver = rootProject.ext.moduleVersion
//plugins {
//    id 'com.android.application'
//    id 'kotlin-android'
//    id 'kotlin-android-extensions'
////    id 'kotlin-parcelize'
////    id 'androidx.navigation.safeargs'
//
//}
//apply plugin: 'kotlin-parcelize'
//apply plugin: 'dagger.hilt.android.plugin'
//apply plugin: 'android-aspectjx'

//        versionCode ver.versionCode
//        versionName ver.versionName
//        multiDexEnabled true//设置 方法数量超 65535
//        manifestPlaceholders.put("PLUGIN_NAME", project.name)
//        manifestPlaceholders.put("PLUGIN_VALUE", versionCode)

//    signingConfigs {
//        debug {
//            v1SigningEnabled true
//            v2SigningEnabled true
//            //获取keystore 里面相关信息
//            def keystoreProFile = rootProject.file("keystore.properties")
//            def keystoreProes = new Properties()
//            keystoreProes.load(new FileInputStream(keystoreProFile))
//
//            keyAlias keystoreProes["keyAlias"]
//            keyPassword keystoreProes["storePassword"]
//            storeFile file(keystoreProes['keystore'])
//            storePassword keystoreProes["keyPassword"]
//        }
//        release {
//            v1SigningEnabled true
//            v2SigningEnabled true
//            //获取keystore 里面相关信息
//            def keystoreProFile = rootProject.file("keystore.properties")
//            def keystoreProes = new Properties()
//            keystoreProes.load(new FileInputStream(keystoreProFile))
//
//            keyAlias keystoreProes["keyAlias"]
//            keyPassword keystoreProes["storePassword"]
//            storeFile file(keystoreProes['keystore'])
//            storePassword keystoreProes["keyPassword"]
//        }
//    }

//module 通用的依赖项
def isModule=libIsModule.toBoolean()
if (isModule) {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.androidConfig.compileSdkVersion
    buildToolsVersion rootProject.ext.androidConfig.buildToolsVersion

    defaultConfig {
        if(isModule){
            applicationId appId[project.name]
        }
        minSdkVersion rootProject.ext.androidConfig.minSdkVersion
        targetSdkVersion rootProject.ext.androidConfig.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        vectorDrawables.useSupportLibrary = true
    }
    dataBinding {
        enabled = true
    }
//    buildFeatures{
//        dataBinding = true
//        // for view binding :
//        // viewBinding = true
//    }

    lintOptions {
        /**
         * 参考文档 ：https://www.cnblogs.com/yiweiyihang/p/12911971.html
         */
        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds false
        // true--错误发生后停止gradle构建
        abortOnError false
    }

    dexOptions {
        /**
         * 参考文档 ：https://blog.csdn.net/weixin_37625173/article/details/103334208
         * 描述：每个 dex 的字符串索引也有限制，正常情况下为 2^16 个。但开启jumboMode 模式，可以支持到 2^32。但是值得注意的是，这个并不是 64K方法数量限制问题的一种方案。
         */
        jumboMode true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file(signingConfig.storeFile_debug)
            storePassword signingConfig.storePassword_debug
            keyAlias = signingConfig.keyAlias_debug
            keyPassword signingConfig.keyPassword_debug
        }
    }
    buildTypes {
        release {
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
//            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "${project.name}_${variant.buildType.name}" +
//                    "_v${defaultConfig.versionCode}" +
//                    "_${new Date().format("yyyy-MM-dd_HH-mm-ss", TimeZone.getTimeZone("GMT+08:00"))}" +
//                    ".apk"
//        }
//    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.core_ktx
    implementation deps.support.appcompat
    implementation deps.support.constraintlayout
    implementation deps.support.material
    testImplementation deps.test.junit
    androidTestImplementation deps.test.junit_androidx
    androidTestImplementation deps.test.espresso
}

